version: "3"
services:
    homechain:
        image: polyswarm/priv-testnet
        ports:
            - "30303:30303"
            - "8545:8545"
        volumes:
            - "home:/root/.ethereum/geth/chaindata"
        command: ["--nodiscover", "--maxpeers", "0", "--syncmode", "full", "--networkid", "1337", "--targetgaslimit", "94000000", "--rpc", "--rpcvhosts", "localhost,homechain", "--rpcaddr", "0.0.0.0", "--rpcapi", "eth,web3,personal,net", "--ws", "--wsaddr", "0.0.0.0", "--wsapi", "eth,web3,personal,net", "--wsorigins", "*", "--unlock", "4b1867c484871926109e3c47668d5c0938ca3527,d87e4662653042c5da11711542c11f2c8433612d,4f10166cafd7856ea946124927d4478fdd18d979,f0243d9b2e332d7072dd4b143a881b3f135f380c,f870491ea0f53f67846eecb57855284d8270284d,34e583cf9c1789c3141538eec77d9f0b8f7e89f2,2b813f079e7e3cf24eeb1ac5853bd6f9118a04ea,1215242c8f0eff0a4ac06ea3d73caa78279fb9bb,05328f171b8c1463eafdacca478d9ee6a1d923f8,085ba02c35555fecb8147820135fdfec10eed85a", "--password", "password.txt", "--mine", "--gasprice", "0"]
    sidechain:
        image: polyswarm/priv-testnet
        ports:
            - "30304:30303"
            - "7545:8545"
        volumes:
            - "side:/root/.ethereum/geth/chaindata"
        command: ["--nodiscover", "--maxpeers", "0", "--syncmode", "full", "--networkid", "1337", "--targetgaslimit", "94000000", "--rpc", "--rpcvhosts", "localhost,sidechain", "--rpcaddr", "0.0.0.0", "--rpcapi", "eth,web3,personal,net", "--ws", "--wsaddr", "0.0.0.0", "--wsapi", "eth,web3,personal,net", "--wsorigins", "*", "--unlock", "4b1867c484871926109e3c47668d5c0938ca3527,d87e4662653042c5da11711542c11f2c8433612d,4f10166cafd7856ea946124927d4478fdd18d979,f0243d9b2e332d7072dd4b143a881b3f135f380c,f870491ea0f53f67846eecb57855284d8270284d,34e583cf9c1789c3141538eec77d9f0b8f7e89f2,2b813f079e7e3cf24eeb1ac5853bd6f9118a04ea,1215242c8f0eff0a4ac06ea3d73caa78279fb9bb,05328f171b8c1463eafdacca478d9ee6a1d923f8,085ba02c35555fecb8147820135fdfec10eed85a", "--password", "password.txt", "--mine", "--gasprice", "0"]
    polyswarmd:
        #image: "polyswarm/polyswarmd"
        build:
            context: "./polyswarmd"
            dockerfile: "./docker/Dockerfile"
        depends_on:
            - homechain
            - sidechain
            - ipfs
        environment:
            - PYTHONUNBUFFERED=1
            - HOME_ETH_URI=http://homechain:8545
            - SIDE_ETH_URI=http://sidechain:8545
            - IPFS_URI=http://ipfs:5001
        command: ["/bin/bash", "./scripts/wait_for_truffle.sh", "polyswarmd"]
        volumes:
            - "contracts:/etc/polyswarmd"
        ports:
            - "80:31337"
    postgres:
        image: postgres
        restart: always
        environment:
            - POSTGRES_PASSWORD=example
        volumes:
            - "postgres:/var/lib/postgresql/data"
    apikeymgmt:
        #image: "polyswarm/api-key-management"
        build:
            context: "./api-key-management"
            dockerfile: "./docker/Dockerfile"
        depends_on:
            - postgres
        environment:
            - DB_URI=postgresql://postgres:example@postgres:5432
        command: ["/bin/bash", "./scripts/wait_for_it.sh", "-t", "0", "postgres:5432", "--", "apikeymgmt"]
        ports:
            - "5000:5000"
    contracts:
        #image: "polyswarm/contracts"
        build:
            context: "./contracts"
            dockerfile: "./docker/Dockerfile"
        depends_on:
            - homechain
            - sidechain
            - ipfs
        environment:
            - geth=homechain
            - HOME_CHAIN=http://homechain:8545
            - SIDE_CHAIN=http://sidechain:8545
            - IPFS=http://ipfs:5001
            - OPTIONS=/config/users.yml
        command: ["/bin/bash", "./scripts/migrate_and_create_config.sh"]
        volumes:
            - "contracts:/build"
            - "./config:/config"
    ipfs:
        image: "ipfs/go-ipfs"
        environment:
            - IPFS_BIND_IP=0.0.0.0
        ports:
            - "4001:4001"
        volumes:
            - "ipfs-export:/export"
            - "ipfs-data:/data/ipfs"
    ambassador:
        #image: "polyswarm/ambassador"
        build:
            context: "./ambassador"
            dockerfile: "./docker/Dockerfile"
        depends_on:
          - polyswarmd
        environment:
          - POLYSWARMD_HOST=polyswarmd
          - POLYSWARMD_PORT=31337
          - PYTHONUNBUFFERED=1
          - API_KEY_HOST=apikeymgmt:5000
          - EMAIL=ambassador@polyswarm.io
          - ADDRESS=0x4b1867c484871926109e3c47668d5c0938ca3527
          - POLYSWARMD_HOST=polyswarmd:31337
        command: "./wait_and_run.sh"
        restart: always
    arbiter:
        #image: "polyswarm/arbiter"
        build:
            context: "./arbiter"
            dockerfile: "./docker/Dockerfile"
        depends_on:
            - polyswarmd
            - homechain
        environment:
            - PYTHONUNBUFFERED=1
            - API_KEY_HOST=apikeymgmt:5000
            - EMAIL=arbiter@polyswarm.io
            - ADDRESS=0xf870491ea0f53f67846eecb57855284d8270284d
            - POLYSWARMD_HOST=polyswarmd:31337
            - GETH=http://homechain:8545
            - PASSWORD=password
            - CHAIN=home
        command: ["./scripts/wait_and_run.sh", "--backend", "verbatim"]
volumes:
    contracts:
        driver_opts:
                type: none
                device: /mnt/hive/contracts
                o: bind
    postgres:
        driver_opts:
                type: none
                device: /mnt/hive/postgres
                o: bind
    ipfs-export:
        driver_opts:
                type: none
                device: /mnt/hive/ipfs-export
                o: bind
    ipfs-data:
        driver_opts:
                type: none
                device: /mnt/hive/ipfs-data
                o: bind
    home:
        driver_opts:
                type: none
                device: /mnt/hive/home
                o: bind
    side:
        driver_opts:
                type: none
                device: /mnt/hive/side
                o: bind
